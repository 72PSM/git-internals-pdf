h2. The Git Directory

When you initialize a git repository, either by cloning an existing one or creating a new one, the first thing git does is create a "Git Directory".  This is the directory that stores all the object data, tags, branches, hooks and more.  Everything that git permanently stores goes in this single directory.  When you clone someone else's repository, it basically just copies the contents of this directory to your computer.  Without a checkout (called a "working directory") this is called a "bare" git repo and moving it to another computer backs up your entire project history.  It is the soul of git.

When you run 'git init' to initialize your repository, the git directory is by default installed in your current working directory as '.git'.  This can be overridden with the _GIT_DIR_ environment variable at any time.  In fact, the git directory does not need to be in your source tree at all.  It's perfectly acceptable to keep all your git directories in a central place (/opt/git/myproject.git) and just make sure to set the GIT_DIR variable when you switch projects you are working on (/home/username/projects/myproject).

For more in depth information on the git directory layout, see the "git repository layout docs":http://www.kernel.org/pub/software/scm/git/docs/repository-layout.html

For now, let's go over some of the more important contents of this directory.

h3. .git/config

This is the main git configuration file.  It keeps your project specific git options, such as your remotes, push configurations, tracking branches and more.  Your configuration will be loaded first from this file, then from a ~/.gitconfig file and then from an /etc/gitconfig file, if they exist.

Here is an example of what a config file might look like:

code. config-example.txt
       
See [config section] for more information on available configuration options.

h3. index

This is the default location of the 'index' file for your git project.  This location can be overridden with the _GIT_INDEX_ environment variable, which is sometimes useful for temporary tree operations.  See [the index] or [advanced index operations] sections for more information on the git index.

h3. objects

This is the main directory that holds the data of your git objects and pack files - that is, all the contents of the files you have ever checked in.

h3. .git/hooks


This directory contains shell scripts that are invoked after the git commands they are named after.  For example, after you run a commit, git will try to execute the _post-commit_ script, if it has executable permissions.

When most of the scripts are run should be pretty self-explanatory by the name of the script, but here they are anyway:

|_file name_ |_description_ |
|applypatch-msg  | invoked by git-am |
|pre-applypatch  | invoked by git-am |
|post-commit     | invoked by git-commit |
|pre-commit      | invoked by git-commit |
|commit-msg      | invoked by git-commit |
|update          | invoked by git-receive-pack on the remote repository |
|post-update     | invoked by git-receive-pack on the remote repository |
|post-receive    | invoked by git-receive-pack on the remote repository |

See [hooks section] or the 
"online hooks documentation":http://www.kernel.org/pub/software/scm/git/docs/hooks.html
for more information on what you can do with hooks.

h3. refs

h3. HEAD


h3. logs

Records of changes made to refs are stored in this directory.

