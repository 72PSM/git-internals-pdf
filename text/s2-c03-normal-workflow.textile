h2. Normal Workflow Examples

Now that we have our repository, let's go through some normal workflow examples of a single person developing.

h3. Ignoring

First off, we will often want Git to automatically ignore certain files - often ones that are automatically generated during our development.  For example, in Rails development we often want to ignore the log files, the production specific configuration files, etc. To do this, we can add patterns into the _.gitignore_ file to tell Git that we don't want it to track them.

Here is an example _.gitignore_ file.

code. gitignore.txt

* ".gitignore":http://www.kernel.org/pub/software/scm/git/docs/gitignore.html

h3. Adding and Committing

Now we'll do some development and periodically commit our changes.  We have a few options here - we can commit individual files or we can tell the _commit_ command to automatically add all modified files in our working directory to the commit.

A good way to find out what you're about to commit is to use the 'status' command.

shell. git-status.txt

In this example, I can see that I've modified three files in my tree, but none of them have been added to the index yet - they are not staged and ready to be committed.  If I want to make these changes in two seperate commits, or I have completed work on some of them and would like to push that out, I can specify which files to add individually and then commit.

shell. git-add-status.txt

You can see that if we commit at this point, only the Rakefile will show up as changed in the commit.

If we want to commit all our changes, we can use this shorthand:

shell. $> git commit -a -m 'committing all changes'

If you would like to give a more useful commit message, you can leave out the '-m' option.  That will fire up your $EDITOR to add your commit message.

note. Give special care to the first line of your commit message - it will often be the only thing people see when they are looking through your commit history.

Now we can continue this loop - modifying, adding and committing - during our development.

* "git status":http://www.kernel.org/pub/software/scm/git/docs/git-status.html
